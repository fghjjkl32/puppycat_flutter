import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';

class Anchor extends GestureDetector {
  final MouseCursor cursor;

  Anchor({
    super.key,
    super.child,
    super.onTapDown,
    super.onTapUp,
    super.onTap,
    super.onTapCancel,
    super.onSecondaryTap,
    super.onSecondaryTapDown,
    super.onSecondaryTapUp,
    super.onSecondaryTapCancel,
    super.onTertiaryTapDown,
    super.onTertiaryTapUp,
    super.onTertiaryTapCancel,
    super.onDoubleTapDown,
    super.onDoubleTap,
    super.onDoubleTapCancel,
    super.onLongPressDown,
    super.onLongPressCancel,
    super.onLongPress,
    super.onLongPressStart,
    super.onLongPressMoveUpdate,
    super.onLongPressUp,
    super.onLongPressEnd,
    super.onSecondaryLongPressDown,
    super.onSecondaryLongPressCancel,
    super.onSecondaryLongPress,
    super.onSecondaryLongPressStart,
    super.onSecondaryLongPressMoveUpdate,
    super.onSecondaryLongPressUp,
    super.onSecondaryLongPressEnd,
    super.onTertiaryLongPressDown,
    super.onTertiaryLongPressCancel,
    super.onTertiaryLongPress,
    super.onTertiaryLongPressStart,
    super.onTertiaryLongPressMoveUpdate,
    super.onTertiaryLongPressUp,
    super.onTertiaryLongPressEnd,
    super.onVerticalDragDown,
    super.onVerticalDragStart,
    super.onVerticalDragUpdate,
    super.onVerticalDragEnd,
    super.onVerticalDragCancel,
    super.onHorizontalDragDown,
    super.onHorizontalDragStart,
    super.onHorizontalDragUpdate,
    super.onHorizontalDragEnd,
    super.onHorizontalDragCancel,
    super.onForcePressStart,
    super.onForcePressPeak,
    super.onForcePressUpdate,
    super.onForcePressEnd,
    super.onPanDown,
    super.onPanStart,
    super.onPanUpdate,
    super.onPanEnd,
    super.onPanCancel,
    super.onScaleStart,
    super.onScaleUpdate,
    super.onScaleEnd,
    super.behavior,
    super.excludeFromSemantics = false,
    super.dragStartBehavior = DragStartBehavior.start,
    super.supportedDevices,
    this.cursor = SystemMouseCursors.click,
  });

  @override
  Widget build(BuildContext context) {
    return MouseRegion(
      cursor: SystemMouseCursors.click,
      child: GestureDetector(
        onTapDown: super.onTapDown,
        onTapUp: super.onTapUp,
        onTap: super.onTap,
        onTapCancel: super.onTapCancel,
        onSecondaryTap: super.onSecondaryTap,
        onSecondaryTapDown: super.onSecondaryTapDown,
        onSecondaryTapUp: super.onSecondaryTapUp,
        onSecondaryTapCancel: super.onSecondaryTapCancel,
        onTertiaryTapDown: super.onTertiaryTapDown,
        onTertiaryTapUp: super.onTertiaryTapUp,
        onTertiaryTapCancel: super.onTertiaryTapCancel,
        onDoubleTapDown: super.onDoubleTapDown,
        onDoubleTap: super.onDoubleTap,
        onDoubleTapCancel: super.onDoubleTapCancel,
        onLongPressDown: super.onLongPressDown,
        onLongPressCancel: super.onLongPressCancel,
        onLongPress: super.onLongPress,
        onLongPressStart: super.onLongPressStart,
        onLongPressMoveUpdate: super.onLongPressMoveUpdate,
        onLongPressUp: super.onLongPressUp,
        onLongPressEnd: super.onLongPressEnd,
        onSecondaryLongPressDown: super.onSecondaryLongPressDown,
        onSecondaryLongPressCancel: super.onSecondaryLongPressCancel,
        onSecondaryLongPress: super.onSecondaryLongPress,
        onSecondaryLongPressStart: super.onSecondaryLongPressStart,
        onSecondaryLongPressMoveUpdate: super.onSecondaryLongPressMoveUpdate,
        onSecondaryLongPressUp: super.onSecondaryLongPressUp,
        onSecondaryLongPressEnd: super.onSecondaryLongPressEnd,
        onTertiaryLongPressDown: super.onTertiaryLongPressDown,
        onTertiaryLongPressCancel: super.onTertiaryLongPressCancel,
        onTertiaryLongPress: super.onTertiaryLongPress,
        onTertiaryLongPressStart: super.onTertiaryLongPressStart,
        onTertiaryLongPressMoveUpdate: super.onTertiaryLongPressMoveUpdate,
        onTertiaryLongPressUp: super.onTertiaryLongPressUp,
        onTertiaryLongPressEnd: super.onTertiaryLongPressEnd,
        onVerticalDragDown: super.onVerticalDragDown,
        onVerticalDragStart: super.onVerticalDragStart,
        onVerticalDragUpdate: super.onVerticalDragUpdate,
        onVerticalDragEnd: super.onVerticalDragEnd,
        onVerticalDragCancel: super.onVerticalDragCancel,
        onHorizontalDragDown: super.onHorizontalDragDown,
        onHorizontalDragStart: super.onHorizontalDragStart,
        onHorizontalDragUpdate: super.onHorizontalDragUpdate,
        onHorizontalDragEnd: super.onHorizontalDragEnd,
        onHorizontalDragCancel: super.onHorizontalDragCancel,
        onForcePressStart: super.onForcePressStart,
        onForcePressPeak: super.onForcePressPeak,
        onForcePressUpdate: super.onForcePressUpdate,
        onForcePressEnd: super.onForcePressEnd,
        onPanDown: super.onPanDown,
        onPanStart: super.onPanStart,
        onPanUpdate: super.onPanUpdate,
        onPanEnd: super.onPanEnd,
        onPanCancel: super.onPanCancel,
        onScaleStart: super.onScaleStart,
        onScaleUpdate: super.onScaleUpdate,
        onScaleEnd: super.onScaleEnd,
        behavior: super.behavior,
        excludeFromSemantics: super.excludeFromSemantics,
        dragStartBehavior: super.dragStartBehavior,
        supportedDevices: super.supportedDevices,
        child: super.child,
      ),
    );
  }
}

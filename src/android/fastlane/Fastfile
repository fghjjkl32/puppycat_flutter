# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

def updateVersion(options)
    if options[:version]
      version = options[:version]
    else
      version = prompt(text: "Enter the version type or specific version\n(major, minor, patch or 1.0.0): ")
    end

    re = /\d+.\d+.\d+/
    versionNum = version[re, 0]

    if versionNum
      increment_version_number(
        version_number: versionNum
      )
    elsif version == 'major' || version == 'minor' || version == 'patch'
      increment_version_number(
        bump_type: version
      )
    else
      UI.user_error!('[ERROR] Wrong version!!!!!!')
    end
  end

  lane :version do |options|
    updateVersion(options)
    increment_build_number(xcodeproj: 'Runner.xcodeproj')
    end


  desc "Push a new beta build with Firebase App Distribution"
  lane :firebase_android do
    flutter_build_android
    gradle(task: "assemble",build_type: "release")
    firebase_app_distribution(
  	    app: ENV["APP_KEY"],
  		firebase_cli_token: ENV["FIREBASE_CLI_TOKEN_KEY"],
  		groups: "group",
  		apk_path: ENV["APK_PATH_KEY"],
  		android_artifact_type: "APK",
      )
    end

  desc "Push a new beta build with Firebase App Distribution"
  lane :firebase_one do
    flutter_build_one
    gradle(task: "assemble",build_type: "release")
    firebase_app_distribution(
    	app: ENV["APP_KEY"],
    	firebase_cli_token: ENV["FIREBASE_CLI_TOKEN_KEY"],
    	groups: "group",
    	apk_path: ENV["APK_PATH_KEY"],
    	android_artifact_type: "APK",
      )
    end


  lane :flutter_build_android do
        sh("cd", "..")
        sh("flutter build apk --target lib/main_android.dart --release")
    end

  lane :flutter_build_one do
        sh("cd", "..")
        sh("flutter build apk --target lib/main_one.dart --release")
    end
end